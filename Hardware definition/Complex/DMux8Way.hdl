// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // One inverted flag for each selector bit 
    Not(in=sel[0], out=selACEG);
    Not(in=sel[1], out=selABEF);
    Not(in=sel[2], out=selABCD);    
    // One selector flag for each pair of channels
    And(a=selABCD, b=selABEF, out=selAB);
    And(a=selABCD, b=sel[1], out=selCD);
    And(a=sel[2], b=selABEF, out=selEF);
    And(a=sel[2], b=sel[1], out=selGH);
    // One selector flag for each channel
    And(a=selAB, b=selACEG,  out=selA);
    And(a=selAB, b=sel[0],  out=selB);
    And(a=selCD, b=selACEG, out=selC);
    And(a=selCD, b=sel[0], out=selD);
    And(a=selEF, b=selACEG, out=selE);
    And(a=selEF, b=sel[0], out=selF);
    And(a=selGH, b=selACEG, out=selG);
    And(a=selGH, b=sel[0], out=selH);
    // Output if selector is high
    And(a=in, b=selA, out=a);
    And(a=in, b=selB, out=b);
    And(a=in, b=selC, out=c);
    And(a=in, b=selD, out=d);
    And(a=in, b=selE, out=e);
    And(a=in, b=selF, out=f);
    And(a=in, b=selG, out=g);
    And(a=in, b=selH, out=h);
}
